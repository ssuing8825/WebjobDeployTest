# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: AzurePowerShell@4
  inputs:
    azureSubscription: 'Windows Azure MSDN - Visual Studio Ultimate(f800f678-35f3-4453-9d5f-1ce0831dada0)'
    ScriptType: 'InlineScript'
    Inline: |
      Write-Host "Hello World from $Env:AGENT_NAME."
      Write-Host "My ID is $Env:AGENT_ID."
      Write-Host "AGENT_WORKFOLDER contents:"
      gci $Env:AGENT_WORKFOLDER
      Write-Host "AGENT_BUILDDIRECTORY contents:"
      gci $Env:AGENT_BUILDDIRECTORY
      Write-Host "BUILD_SOURCESDIRECTORY contents:"
      gci $Env:BUILD_SOURCESDIRECTORY
      Write-Host "Over and out."
      gci '$(build.artifactStagingDirectory)/*.zip'
    azurePowerShellVersion: 'LatestVersion'

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'WebJobDemoTestServiceConnection'
    appType: 'webApp'
    WebAppName: 'webjobdeploytest'
    packageForLinux: '$(build.artifactStagingDirectory)/*.zip'

